"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const asyncHandler_1 = require("../../utils/asyncHandler");
const users_controller_1 = require("../controllers/users.controller");
const user_validator_1 = require("../validators/user.validator");
const validation_middleware_1 = require("../middleware/validation.middleware");
const common_validator_1 = require("../validators/common.validator");
const router = (0, express_1.Router)();
router.post("/createUser", user_validator_1.createUserValidator, (0, validation_middleware_1.withValidation)([user_validator_1.createUserValidator]), (0, asyncHandler_1.asyncHandler)(users_controller_1.createUser));
router.patch("/update/:user_id", ...(0, validation_middleware_1.withValidation)([user_validator_1.updateUserValidator]), (0, asyncHandler_1.asyncHandler)(users_controller_1.updateUser));
router.delete("/delete/:user_id", ...(0, validation_middleware_1.withValidation)([user_validator_1.deleteUserValidator]), (0, asyncHandler_1.asyncHandler)(users_controller_1.deleteUser));
router.get("/tenUsers", (0, asyncHandler_1.asyncHandler)(users_controller_1.getAllTenUsers));
router.get("/userDetails/:userId", (0, asyncHandler_1.asyncHandler)(users_controller_1.getCurrentUser));
router.get("/tenCustomers", ...(0, validation_middleware_1.withValidation)([common_validator_1.paginateAndFilterAccountsQuery]), (0, asyncHandler_1.asyncHandler)(users_controller_1.fetchCustomers));
router.get("/usersByCustomerId", ...(0, validation_middleware_1.withValidation)([user_validator_1.validateGetUsersByCustomerId]), (0, asyncHandler_1.asyncHandler)(users_controller_1.getAllUsersByCustomerId));
router.get("/userCustomerDetailsAndAccounts/:userId", (0, asyncHandler_1.asyncHandler)(users_controller_1.getCustomerDetailsAndAccountsByUserId));
router.get("/customerUsersByAssignedAccounts/:userId", (0, asyncHandler_1.asyncHandler)(users_controller_1.getCustomerUsersByAccountAssignment));
router.get("/downloadAllTenUsers", (0, asyncHandler_1.asyncHandler)(users_controller_1.downloadAllTenUsers));
router.get("/downloadCustomerUsersByAccountAssignment/:userId", (0, asyncHandler_1.asyncHandler)(users_controller_1.downloadCustomerUsersByAccountAssignment));
router.get("/downloadCustomers", (0, asyncHandler_1.asyncHandler)(users_controller_1.downloadCustomers));
router.post("/userColumnPreferences", (0, validation_middleware_1.withValidation)([user_validator_1.createUserColumnPreferenceValidator]), (0, asyncHandler_1.asyncHandler)(users_controller_1.createUserColumnPreference));
router.get("/getUserColumnPreference/:user_id/:table_name", (0, validation_middleware_1.withValidation)(user_validator_1.validateUserIdParam), (0, asyncHandler_1.asyncHandler)(users_controller_1.getUserTablePreference));
exports.default = router;
